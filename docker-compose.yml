services:
  web:
    container_name: backend
    restart: always
    build: ./
    command: /start.sh
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - redis

  nginx-proxy:
    container_name: nginx-proxy
    image: nginxproxy/nginx-proxy:latest
    restart: always
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - /var/run/docker.sock:/tmp/docker.sock:ro
    depends_on:
      - web

  nginx-proxy-letsencrypt:
    image: nginxproxy/acme-companion:latest
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - acme:/etc/acme.sh

  celery:
    build: ./
    command: /start-celeryworker.sh
    restart: always
    env_file:
      - .env
    depends_on:
      - redis
      - web

  celery-beat:
    build: ./
    command: /start-celerybeat.sh
    restart: always
    env_file:
      - .env
    depends_on:
      - redis
      - web

  redis:
    image: redis:latest

volumes:
  certs:
  html:
  vhost:
  acme:
